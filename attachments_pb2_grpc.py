# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import attachments_pb2 as attachments__pb2


class AttachmentsStub(object):
  """Attachments are
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Create = channel.unary_unary(
        '/v1.Attachments/Create',
        request_serializer=attachments__pb2.AttachmentCreateRequest.SerializeToString,
        response_deserializer=attachments__pb2.AttachmentCreateResponse.FromString,
        )
    self.Get = channel.unary_unary(
        '/v1.Attachments/Get',
        request_serializer=attachments__pb2.AttachmentGetRequest.SerializeToString,
        response_deserializer=attachments__pb2.AttachmentGetResponse.FromString,
        )
    self.Delete = channel.unary_unary(
        '/v1.Attachments/Delete',
        request_serializer=attachments__pb2.AttachmentDeleteRequest.SerializeToString,
        response_deserializer=attachments__pb2.AttachmentDeleteResponse.FromString,
        )
    self.List = channel.unary_unary(
        '/v1.Attachments/List',
        request_serializer=attachments__pb2.AttachmentListRequest.SerializeToString,
        response_deserializer=attachments__pb2.AttachmentListResponse.FromString,
        )
    self.BatchDelete = channel.unary_unary(
        '/v1.Attachments/BatchDelete',
        request_serializer=attachments__pb2.AttachmentBatchDeleteRequest.SerializeToString,
        response_deserializer=attachments__pb2.AttachmentBatchDeleteResponse.FromString,
        )


class AttachmentsServicer(object):
  """Attachments are
  """

  def Create(self, request, context):
    """Create registers a new attachment.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get(self, request, context):
    """Get reads one attachment by ID.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Delete(self, request, context):
    """Delete removes a Attachment by ID.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def List(self, request, context):
    """List is a batched Get call.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BatchDelete(self, request, context):
    """BatchDelete is a batched Delete call.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AttachmentsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Create': grpc.unary_unary_rpc_method_handler(
          servicer.Create,
          request_deserializer=attachments__pb2.AttachmentCreateRequest.FromString,
          response_serializer=attachments__pb2.AttachmentCreateResponse.SerializeToString,
      ),
      'Get': grpc.unary_unary_rpc_method_handler(
          servicer.Get,
          request_deserializer=attachments__pb2.AttachmentGetRequest.FromString,
          response_serializer=attachments__pb2.AttachmentGetResponse.SerializeToString,
      ),
      'Delete': grpc.unary_unary_rpc_method_handler(
          servicer.Delete,
          request_deserializer=attachments__pb2.AttachmentDeleteRequest.FromString,
          response_serializer=attachments__pb2.AttachmentDeleteResponse.SerializeToString,
      ),
      'List': grpc.unary_unary_rpc_method_handler(
          servicer.List,
          request_deserializer=attachments__pb2.AttachmentListRequest.FromString,
          response_serializer=attachments__pb2.AttachmentListResponse.SerializeToString,
      ),
      'BatchDelete': grpc.unary_unary_rpc_method_handler(
          servicer.BatchDelete,
          request_deserializer=attachments__pb2.AttachmentBatchDeleteRequest.FromString,
          response_serializer=attachments__pb2.AttachmentBatchDeleteResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'v1.Attachments', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
