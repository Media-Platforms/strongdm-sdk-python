# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import account_grants_pb2 as account__grants__pb2


class AccountGrantsStub(object):
  """AccountGrants represent relationships between composite roles and the roles
  that make up those composite roles. When a composite role is attached to another
  role, the permissions granted to members of the composite role are augmented to
  include the permissions granted to members of the attached role.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Create = channel.unary_unary(
        '/v1.AccountGrants/Create',
        request_serializer=account__grants__pb2.AccountGrantCreateRequest.SerializeToString,
        response_deserializer=account__grants__pb2.AccountGrantCreateResponse.FromString,
        )
    self.Get = channel.unary_unary(
        '/v1.AccountGrants/Get',
        request_serializer=account__grants__pb2.AccountGrantGetRequest.SerializeToString,
        response_deserializer=account__grants__pb2.AccountGrantGetResponse.FromString,
        )
    self.Delete = channel.unary_unary(
        '/v1.AccountGrants/Delete',
        request_serializer=account__grants__pb2.AccountGrantDeleteRequest.SerializeToString,
        response_deserializer=account__grants__pb2.AccountGrantDeleteResponse.FromString,
        )
    self.List = channel.unary_unary(
        '/v1.AccountGrants/List',
        request_serializer=account__grants__pb2.AccountGrantListRequest.SerializeToString,
        response_deserializer=account__grants__pb2.AccountGrantListResponse.FromString,
        )


class AccountGrantsServicer(object):
  """AccountGrants represent relationships between composite roles and the roles
  that make up those composite roles. When a composite role is attached to another
  role, the permissions granted to members of the composite role are augmented to
  include the permissions granted to members of the attached role.
  """

  def Create(self, request, context):
    """Create registers a new AccountGrant.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get(self, request, context):
    """Get reads one AccountGrant by ID.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Delete(self, request, context):
    """Delete removes a AccountGrant by ID.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def List(self, request, context):
    """List gets a list of AccountGrants matching a given set of criteria.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AccountGrantsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Create': grpc.unary_unary_rpc_method_handler(
          servicer.Create,
          request_deserializer=account__grants__pb2.AccountGrantCreateRequest.FromString,
          response_serializer=account__grants__pb2.AccountGrantCreateResponse.SerializeToString,
      ),
      'Get': grpc.unary_unary_rpc_method_handler(
          servicer.Get,
          request_deserializer=account__grants__pb2.AccountGrantGetRequest.FromString,
          response_serializer=account__grants__pb2.AccountGrantGetResponse.SerializeToString,
      ),
      'Delete': grpc.unary_unary_rpc_method_handler(
          servicer.Delete,
          request_deserializer=account__grants__pb2.AccountGrantDeleteRequest.FromString,
          response_serializer=account__grants__pb2.AccountGrantDeleteResponse.SerializeToString,
      ),
      'List': grpc.unary_unary_rpc_method_handler(
          servicer.List,
          request_deserializer=account__grants__pb2.AccountGrantListRequest.FromString,
          response_serializer=account__grants__pb2.AccountGrantListResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'v1.AccountGrants', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
